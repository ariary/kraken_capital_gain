1) Get All trade history (=> in excel) DONE
2) Get all trade history for one currency + have total buy and total sell DONE
3) have total for a week, a day, a month (even multi timeframe in a time)

TO DO:
1) faire une fonction qui retourne les trades en fonction d'une timeframe (pour une currency),
ou qui prend tous les trades d'une timeframe et qui affine après par currency (c'est mieux)
1bis) Faire fonction qui retourne la valeur buy / sell pour un ensemble de trade (Exec: 1->1Bis)
2)Pouvoir affiné le résultat (s'il y a un open ou si on en possède => simuler en vendant/achetant aux prix du marché + fee si on y arrive )
3)Avoir la possibilité d'afficher les trades de la timeframe donnée
4) pouvoir récuperer les trades à partir d'un id de trade


PRECOMMIT:
pre-commit autoupdate  (update hook)
SKIP=id_hook git commit ... (skip a hook)

ARCHI:
Kraken_handler: Talk to krakenAPI -> trades dict
Trade_Parser: parse the trade dict according currency, timeframe etc
trade_Printer: save cvs, xsls etc


NOTE FOR DAILY TIMEFRAME
# for i in range(1,11):
#     start_date = datetime.datetime(2020, i+1, 1)
#     end_date = datetime.datetime(2020, i+2, 30)

# year = timedelta(days=365)
# print(str(year))

# sdate = datetime.datetime(2008, 8, 15)   # start date
# edate = datetime.datetime(2010, 9, 15)   # end date

# delta = edate - sdate       # as timedelta

# for i in range(delta.days + 1):
#     day = sdate + timedelta(days=i)
#     print(day)
